// This code was generated by $root/bin/opcodes.mts.
// Do not change it manually.

import type { VmOpMap as OpType } from '@glimmer/interfaces';

export const Op = {
  PushFrame: 0 satisfies OpType['PushFrame'],
  PopFrame: 1 satisfies OpType['PopFrame'],
  Jump: 2 satisfies OpType['Jump'],
  ReturnTo: 3 satisfies OpType['ReturnTo'],
  PopTryFrame: 4 satisfies OpType['PopTryFrame'],
  UnwindTypeFrame: 5 satisfies OpType['UnwindTypeFrame'],
  PushTryFrame: 16 satisfies OpType['PushTryFrame'],
  InvokeVirtual: 17 satisfies OpType['InvokeVirtual'],
  InvokeStatic: 18 satisfies OpType['InvokeStatic'],
  Return: 19 satisfies OpType['Return'],
  Helper: 20 satisfies OpType['Helper'],
  SetNamedVariables: 21 satisfies OpType['SetNamedVariables'],
  SetBlocks: 22 satisfies OpType['SetBlocks'],
  SetVariable: 23 satisfies OpType['SetVariable'],
  SetBlock: 24 satisfies OpType['SetBlock'],
  GetVariable: 25 satisfies OpType['GetVariable'],
  GetProperty: 26 satisfies OpType['GetProperty'],
  GetBlock: 27 satisfies OpType['GetBlock'],
  SpreadBlock: 28 satisfies OpType['SpreadBlock'],
  HasBlock: 29 satisfies OpType['HasBlock'],
  HasBlockParams: 30 satisfies OpType['HasBlockParams'],
  Concat: 31 satisfies OpType['Concat'],
  Constant: 32 satisfies OpType['Constant'],
  ConstantReference: 33 satisfies OpType['ConstantReference'],
  Primitive: 34 satisfies OpType['Primitive'],
  PrimitiveReference: 35 satisfies OpType['PrimitiveReference'],
  ReifyU32: 36 satisfies OpType['ReifyU32'],
  Dup: 37 satisfies OpType['Dup'],
  Pop: 38 satisfies OpType['Pop'],
  Load: 39 satisfies OpType['Load'],
  Fetch: 40 satisfies OpType['Fetch'],
  RootScope: 41 satisfies OpType['RootScope'],
  VirtualRootScope: 42 satisfies OpType['VirtualRootScope'],
  ChildScope: 43 satisfies OpType['ChildScope'],
  PopScope: 44 satisfies OpType['PopScope'],
  Text: 45 satisfies OpType['Text'],
  Comment: 46 satisfies OpType['Comment'],
  AppendHTML: 47 satisfies OpType['AppendHTML'],
  AppendSafeHTML: 48 satisfies OpType['AppendSafeHTML'],
  AppendDocumentFragment: 49 satisfies OpType['AppendDocumentFragment'],
  AppendNode: 50 satisfies OpType['AppendNode'],
  AppendText: 51 satisfies OpType['AppendText'],
  OpenElement: 52 satisfies OpType['OpenElement'],
  OpenDynamicElement: 53 satisfies OpType['OpenDynamicElement'],
  PushRemoteElement: 54 satisfies OpType['PushRemoteElement'],
  StaticAttr: 55 satisfies OpType['StaticAttr'],
  DynamicAttr: 56 satisfies OpType['DynamicAttr'],
  ComponentAttr: 57 satisfies OpType['ComponentAttr'],
  FlushElement: 58 satisfies OpType['FlushElement'],
  CloseElement: 59 satisfies OpType['CloseElement'],
  PopRemoteElement: 60 satisfies OpType['PopRemoteElement'],
  Modifier: 61 satisfies OpType['Modifier'],
  BindDynamicScope: 62 satisfies OpType['BindDynamicScope'],
  PushDynamicScope: 63 satisfies OpType['PushDynamicScope'],
  PopDynamicScope: 64 satisfies OpType['PopDynamicScope'],
  CompileBlock: 65 satisfies OpType['CompileBlock'],
  PushBlockScope: 66 satisfies OpType['PushBlockScope'],
  PushSymbolTable: 67 satisfies OpType['PushSymbolTable'],
  InvokeYield: 68 satisfies OpType['InvokeYield'],
  JumpIf: 69 satisfies OpType['JumpIf'],
  JumpUnless: 70 satisfies OpType['JumpUnless'],
  JumpEq: 71 satisfies OpType['JumpEq'],
  AssertSame: 72 satisfies OpType['AssertSame'],
  Enter: 73 satisfies OpType['Enter'],
  Exit: 74 satisfies OpType['Exit'],
  ToBoolean: 75 satisfies OpType['ToBoolean'],
  EnterList: 76 satisfies OpType['EnterList'],
  ExitList: 77 satisfies OpType['ExitList'],
  Iterate: 78 satisfies OpType['Iterate'],
  Main: 79 satisfies OpType['Main'],
  ContentType: 80 satisfies OpType['ContentType'],
  Curry: 81 satisfies OpType['Curry'],
  PushComponentDefinition: 82 satisfies OpType['PushComponentDefinition'],
  PushDynamicComponentInstance: 83 satisfies OpType['PushDynamicComponentInstance'],
  ResolveDynamicComponent: 84 satisfies OpType['ResolveDynamicComponent'],
  ResolveCurriedComponent: 85 satisfies OpType['ResolveCurriedComponent'],
  PushArgs: 86 satisfies OpType['PushArgs'],
  PushEmptyArgs: 87 satisfies OpType['PushEmptyArgs'],
  PrepareArgs: 88 satisfies OpType['PrepareArgs'],
  CaptureArgs: 89 satisfies OpType['CaptureArgs'],
  CreateComponent: 90 satisfies OpType['CreateComponent'],
  RegisterComponentDestructor: 91 satisfies OpType['RegisterComponentDestructor'],
  PutComponentOperations: 92 satisfies OpType['PutComponentOperations'],
  GetComponentSelf: 93 satisfies OpType['GetComponentSelf'],
  GetComponentTagName: 94 satisfies OpType['GetComponentTagName'],
  GetComponentLayout: 95 satisfies OpType['GetComponentLayout'],
  SetupForEval: 96 satisfies OpType['SetupForEval'],
  PopulateLayout: 97 satisfies OpType['PopulateLayout'],
  InvokeComponentLayout: 98 satisfies OpType['InvokeComponentLayout'],
  BeginComponentTransaction: 99 satisfies OpType['BeginComponentTransaction'],
  CommitComponentTransaction: 100 satisfies OpType['CommitComponentTransaction'],
  DidCreateElement: 101 satisfies OpType['DidCreateElement'],
  DidRenderLayout: 102 satisfies OpType['DidRenderLayout'],
  Debugger: 103 satisfies OpType['Debugger'],
  StaticComponentAttr: 104 satisfies OpType['StaticComponentAttr'],
  DynamicContentType: 105 satisfies OpType['DynamicContentType'],
  DynamicHelper: 106 satisfies OpType['DynamicHelper'],
  DynamicModifier: 107 satisfies OpType['DynamicModifier'],
  IfInline: 108 satisfies OpType['IfInline'],
  Not: 109 satisfies OpType['Not'],
  GetDynamicVar: 110 satisfies OpType['GetDynamicVar'],
  Log: 111 satisfies OpType['Log'],
  PushUnwindTarget: 112 satisfies OpType['PushUnwindTarget'],
} as const;

export const OpSize = 113 as const;
