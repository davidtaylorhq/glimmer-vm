// This code was generated by $root/bin/opcodes.mts.
// Do not change it manually.

export interface VmOpMap {
  PushFrame: 0;
  PopFrame: 1;
  InvokeVirtual: 2;
  InvokeStatic: 3;
  Jump: 4;
  Return: 5;
  ReturnTo: 6;
  PopTryFrame: 7;
  UnwindTypeFrame: 8;
  PushTryFrame: 16;
  Helper: 17;
  SetNamedVariables: 18;
  SetBlocks: 19;
  SetVariable: 20;
  SetBlock: 21;
  GetVariable: 22;
  GetProperty: 23;
  GetBlock: 24;
  SpreadBlock: 25;
  HasBlock: 26;
  HasBlockParams: 27;
  Concat: 28;
  Constant: 29;
  ConstantReference: 30;
  Primitive: 31;
  PrimitiveReference: 32;
  ReifyU32: 33;
  Dup: 34;
  Pop: 35;
  Load: 36;
  Fetch: 37;
  RootScope: 38;
  VirtualRootScope: 39;
  ChildScope: 40;
  PopScope: 41;
  Text: 42;
  Comment: 43;
  AppendHTML: 44;
  AppendSafeHTML: 45;
  AppendDocumentFragment: 46;
  AppendNode: 47;
  AppendText: 48;
  OpenElement: 49;
  OpenDynamicElement: 50;
  PushRemoteElement: 51;
  StaticAttr: 52;
  DynamicAttr: 53;
  ComponentAttr: 54;
  FlushElement: 55;
  CloseElement: 56;
  PopRemoteElement: 57;
  Modifier: 58;
  BindDynamicScope: 59;
  PushDynamicScope: 60;
  PopDynamicScope: 61;
  CompileBlock: 62;
  PushBlockScope: 63;
  PushSymbolTable: 64;
  InvokeYield: 65;
  JumpIf: 66;
  JumpUnless: 67;
  JumpEq: 68;
  AssertSame: 69;
  Enter: 70;
  Exit: 71;
  ToBoolean: 72;
  EnterList: 73;
  ExitList: 74;
  Iterate: 75;
  Main: 76;
  ContentType: 77;
  Curry: 78;
  PushComponentDefinition: 79;
  PushDynamicComponentInstance: 80;
  ResolveDynamicComponent: 81;
  ResolveCurriedComponent: 82;
  PushArgs: 83;
  PushEmptyArgs: 84;
  PrepareArgs: 85;
  CaptureArgs: 86;
  CreateComponent: 87;
  RegisterComponentDestructor: 88;
  PutComponentOperations: 89;
  GetComponentSelf: 90;
  GetComponentTagName: 91;
  GetComponentLayout: 92;
  SetupForEval: 93;
  PopulateLayout: 94;
  InvokeComponentLayout: 95;
  BeginComponentTransaction: 96;
  CommitComponentTransaction: 97;
  DidCreateElement: 98;
  DidRenderLayout: 99;
  Debugger: 100;
  StaticComponentAttr: 101;
  DynamicContentType: 102;
  DynamicHelper: 103;
  DynamicModifier: 104;
  IfInline: 105;
  Not: 106;
  GetDynamicVar: 107;
  Log: 108;
  PushUnwindTarget: 109;
}

export type VmMachineOp =
  | VmOpMap['PushFrame']
  | VmOpMap['PopFrame']
  | VmOpMap['InvokeVirtual']
  | VmOpMap['InvokeStatic']
  | VmOpMap['Jump']
  | VmOpMap['Return']
  | VmOpMap['ReturnTo']
  | VmOpMap['PopTryFrame']
  | VmOpMap['UnwindTypeFrame'];

export type VmSyscallOp =
  | VmOpMap['PushTryFrame']
  | VmOpMap['Helper']
  | VmOpMap['SetNamedVariables']
  | VmOpMap['SetBlocks']
  | VmOpMap['SetVariable']
  | VmOpMap['SetBlock']
  | VmOpMap['GetVariable']
  | VmOpMap['GetProperty']
  | VmOpMap['GetBlock']
  | VmOpMap['SpreadBlock']
  | VmOpMap['HasBlock']
  | VmOpMap['HasBlockParams']
  | VmOpMap['Concat']
  | VmOpMap['Constant']
  | VmOpMap['ConstantReference']
  | VmOpMap['Primitive']
  | VmOpMap['PrimitiveReference']
  | VmOpMap['ReifyU32']
  | VmOpMap['Dup']
  | VmOpMap['Pop']
  | VmOpMap['Load']
  | VmOpMap['Fetch']
  | VmOpMap['RootScope']
  | VmOpMap['VirtualRootScope']
  | VmOpMap['ChildScope']
  | VmOpMap['PopScope']
  | VmOpMap['Text']
  | VmOpMap['Comment']
  | VmOpMap['AppendHTML']
  | VmOpMap['AppendSafeHTML']
  | VmOpMap['AppendDocumentFragment']
  | VmOpMap['AppendNode']
  | VmOpMap['AppendText']
  | VmOpMap['OpenElement']
  | VmOpMap['OpenDynamicElement']
  | VmOpMap['PushRemoteElement']
  | VmOpMap['StaticAttr']
  | VmOpMap['DynamicAttr']
  | VmOpMap['ComponentAttr']
  | VmOpMap['FlushElement']
  | VmOpMap['CloseElement']
  | VmOpMap['PopRemoteElement']
  | VmOpMap['Modifier']
  | VmOpMap['BindDynamicScope']
  | VmOpMap['PushDynamicScope']
  | VmOpMap['PopDynamicScope']
  | VmOpMap['CompileBlock']
  | VmOpMap['PushBlockScope']
  | VmOpMap['PushSymbolTable']
  | VmOpMap['InvokeYield']
  | VmOpMap['JumpIf']
  | VmOpMap['JumpUnless']
  | VmOpMap['JumpEq']
  | VmOpMap['AssertSame']
  | VmOpMap['Enter']
  | VmOpMap['Exit']
  | VmOpMap['ToBoolean']
  | VmOpMap['EnterList']
  | VmOpMap['ExitList']
  | VmOpMap['Iterate']
  | VmOpMap['Main']
  | VmOpMap['ContentType']
  | VmOpMap['Curry']
  | VmOpMap['PushComponentDefinition']
  | VmOpMap['PushDynamicComponentInstance']
  | VmOpMap['ResolveDynamicComponent']
  | VmOpMap['ResolveCurriedComponent']
  | VmOpMap['PushArgs']
  | VmOpMap['PushEmptyArgs']
  | VmOpMap['PrepareArgs']
  | VmOpMap['CaptureArgs']
  | VmOpMap['CreateComponent']
  | VmOpMap['RegisterComponentDestructor']
  | VmOpMap['PutComponentOperations']
  | VmOpMap['GetComponentSelf']
  | VmOpMap['GetComponentTagName']
  | VmOpMap['GetComponentLayout']
  | VmOpMap['SetupForEval']
  | VmOpMap['PopulateLayout']
  | VmOpMap['InvokeComponentLayout']
  | VmOpMap['BeginComponentTransaction']
  | VmOpMap['CommitComponentTransaction']
  | VmOpMap['DidCreateElement']
  | VmOpMap['DidRenderLayout']
  | VmOpMap['Debugger']
  | VmOpMap['StaticComponentAttr']
  | VmOpMap['DynamicContentType']
  | VmOpMap['DynamicHelper']
  | VmOpMap['DynamicModifier']
  | VmOpMap['IfInline']
  | VmOpMap['Not']
  | VmOpMap['GetDynamicVar']
  | VmOpMap['Log']
  | VmOpMap['PushUnwindTarget'];

export type OpSize = 110;
