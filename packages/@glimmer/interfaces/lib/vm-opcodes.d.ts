/* This file is generated by build/debug.js */

type VmMachineOpMap = readonly [
  'PushFrame',
  'PopFrame',
  'InvokeVirtual',
  'InvokeStatic',
  'Jump',
  'Return',
  'ReturnTo',
  'PushTryFrame',
  'PopTryFrame',
  'UnwindTypeFrame',
];

export type VmOpMap = readonly [
  ...VmMachineOpMap,
  // reserved for future machine ops
  null,
  null,
  null,
  null,
  null,
  null,
  'Helper',
  'SetNamedVariables',
  'SetBlocks',
  'SetVariable',
  'SetBlock',
  'GetVariable',
  'GetProperty',
  'GetBlock',
  'SpreadBlock',
  'HasBlock',
  'HasBlockParams',
  'Concat',
  'Constant',
  'ConstantReference',
  'Primitive',
  'PrimitiveReference',
  'ReifyU32',
  'Dup',
  'Pop',
  'Load',
  'Fetch',
  'RootScope',
  'VirtualRootScope',
  'ChildScope',
  'PopScope',
  'Text',
  'Comment',
  'AppendHTML',
  'AppendSafeHTML',
  'AppendDocumentFragment',
  'AppendNode',
  'AppendText',
  'OpenElement',
  'OpenDynamicElement',
  'PushRemoteElement',
  'StaticAttr',
  'DynamicAttr',
  'ComponentAttr',
  'FlushElement',
  'CloseElement',
  'PopRemoteElement',
  'Modifier',
  'BindDynamicScope',
  'PushDynamicScope',
  'PopDynamicScope',
  'CompileBlock',
  'PushBlockScope',
  'PushSymbolTable',
  'InvokeYield',
  'JumpIf',
  'JumpUnless',
  'JumpEq',
  'AssertSame',
  'Enter',
  'Exit',
  'ToBoolean',
  'EnterList',
  'ExitList',
  'Iterate',
  'Main',
  'ContentType',
  'Curry',
  'PushComponentDefinition',
  'PushDynamicComponentInstance',
  'ResolveDynamicComponent',
  'ResolveCurriedComponent',
  'PushArgs',
  'PushEmptyArgs',
  'PrepareArgs',
  'CaptureArgs',
  'CreateComponent',
  'RegisterComponentDestructor',
  'PutComponentOperations',
  'GetComponentSelf',
  'GetComponentTagName',
  'GetComponentLayout',
  'SetupForEval',
  'PopulateLayout',
  'InvokeComponentLayout',
  'BeginComponentTransaction',
  'CommitComponentTransaction',
  'DidCreateElement',
  'DidRenderLayout',
  'Debugger',
  'StaticComponentAttr',
  'DynamicContentType',
  'DynamicHelper',
  'DynamicModifier',
  'IfInline',
  'Not',
  'GetDynamicVar',
  'Log',
  'PushUnwindTarget',
];

type TupleIndices<T extends readonly any[]> = Extract<
  keyof T,
  `${number}`
> extends `${infer N extends number}`
  ? N
  : never;

export type VmOpName = NonNullable<VmOpMap[number]>;
export type VmOp = TupleIndices<VmOpMap>;
export type VmOpSize = VmOpMap['length'];
export type VmMachineOp = TupleIndices<VmMachineOpMap>;
