const ops = [
  'Concat: 27 satisfies VmConcat',
  'Constant: 28 satisfies VmConstant',
  'ConstantReference: 29 satisfies VmConstantReference',
  'Primitive: 30 satisfies VmPrimitive',
  'PrimitiveReference: 31 satisfies VmPrimitiveReference',
  'ReifyU32: 32 satisfies VmReifyU32',
  'Dup: 33 satisfies VmDup',
  'Pop: 34 satisfies VmPop',
  'Load: 35 satisfies VmLoad',
  'Fetch: 36 satisfies VmFetch',
  'RootScope: 37 satisfies VmRootScope',
  'VirtualRootScope: 38 satisfies VmVirtualRootScope',
  'ChildScope: 39 satisfies VmChildScope',
  'PopScope: 40 satisfies VmPopScope',
  'Text: 41 satisfies VmText',
  'Comment: 42 satisfies VmComment',
  'AppendHTML: 43 satisfies VmAppendHTML',
  'AppendSafeHTML: 44 satisfies VmAppendSafeHTML',
  'AppendDocumentFragment: 45 satisfies VmAppendDocumentFragment',
  'AppendNode: 46 satisfies VmAppendNode',
  'AppendText: 47 satisfies VmAppendText',
  'OpenElement: 48 satisfies VmOpenElement',
  'OpenDynamicElement: 49 satisfies VmOpenDynamicElement',
  'PushRemoteElement: 50 satisfies VmPushRemoteElement',
  'StaticAttr: 51 satisfies VmStaticAttr',
  'DynamicAttr: 52 satisfies VmDynamicAttr',
  'ComponentAttr: 53 satisfies VmComponentAttr',
  'FlushElement: 54 satisfies VmFlushElement',
  'CloseElement: 55 satisfies VmCloseElement',
  'PopRemoteElement: 56 satisfies VmPopRemoteElement',
  'Modifier: 57 satisfies VmModifier',
  'BindDynamicScope: 58 satisfies VmBindDynamicScope',
  'PushDynamicScope: 59 satisfies VmPushDynamicScope',
  'PopDynamicScope: 60 satisfies VmPopDynamicScope',
  'CompileBlock: 61 satisfies VmCompileBlock',
  'PushBlockScope: 62 satisfies VmPushBlockScope',
  'PushSymbolTable: 63 satisfies VmPushSymbolTable',
  'InvokeYield: 64 satisfies VmInvokeYield',
  'JumpIf: 65 satisfies VmJumpIf',
  'JumpUnless: 66 satisfies VmJumpUnless',
  'JumpEq: 67 satisfies VmJumpEq',
  'AssertSame: 68 satisfies VmAssertSame',
  'Enter: 69 satisfies VmEnter',
  'Exit: 70 satisfies VmExit',
  'ToBoolean: 71 satisfies VmToBoolean',
  'EnterList: 72 satisfies VmEnterList',
  'ExitList: 73 satisfies VmExitList',
  'Iterate: 74 satisfies VmIterate',
  'Main: 75 satisfies VmMain',
  'ContentType: 76 satisfies VmContentType',
  'Curry: 77 satisfies VmCurry',
  'PushComponentDefinition: 78 satisfies VmPushComponentDefinition',
  'PushDynamicComponentInstance: 79 satisfies VmPushDynamicComponentInstance',
  'ResolveDynamicComponent: 80 satisfies VmResolveDynamicComponent',
  'ResolveCurriedComponent: 81 satisfies VmResolveCurriedComponent',
  'PushArgs: 82 satisfies VmPushArgs',
  'PushEmptyArgs: 83 satisfies VmPushEmptyArgs',
  'PopArgs: 84 satisfies VmPopArgs',
  'PrepareArgs: 85 satisfies VmPrepareArgs',
  'CaptureArgs: 86 satisfies VmCaptureArgs',
  'CreateComponent: 87 satisfies VmCreateComponent',
  'RegisterComponentDestructor: 88 satisfies VmRegisterComponentDestructor',
  'PutComponentOperations: 89 satisfies VmPutComponentOperations',
  'GetComponentSelf: 90 satisfies VmGetComponentSelf',
  'GetComponentTagName: 91 satisfies VmGetComponentTagName',
  'GetComponentLayout: 92 satisfies VmGetComponentLayout',
  'BindEvalScope: 93 satisfies VmBindEvalScope',
  'PopulateLayout: 95 satisfies VmPopulateLayout',
  'InvokeComponentLayout: 96 satisfies VmInvokeComponentLayout',
  'BeginComponentTransaction: 97 satisfies VmBeginComponentTransaction',
  'CommitComponentTransaction: 98 satisfies VmCommitComponentTransaction',
  'DidCreateElement: 99 satisfies VmDidCreateElement',
  'DidRenderLayout: 100 satisfies VmDidRenderLayout',
  'Debugger: 103 satisfies VmDebugger',
  'Size: 104 satisfies VmSize',
  'StaticComponentAttr: 105 satisfies VmStaticComponentAttr',
  'DynamicContentType: 106 satisfies VmDynamicContentType',
  'DynamicHelper: 107 satisfies VmDynamicHelper',
  'DynamicModifier: 108 satisfies VmDynamicModifier',
  'IfInline: 109 satisfies VmIfInline',
  'Not: 110 satisfies VmNot',
  'GetDynamicVar: 111 satisfies VmGetDynamicVar',
  'Log: 112 satisfies VmLog',
];

for (const op of ops) {
  const parsed = op.match(/^(?<name>\w+):\s(?<number>\d+)\s+satisfies\s+(?<type>.*)/).groups;
  console.log(`const ${screamingSnakeCase(parsed.name)}_OP: ${parsed.type} = ${parsed.number};`);
}

function screamingSnakeCase(str) {
  return str.replace(/([a-z])([A-Z])/g, '$1_$2').toUpperCase();
}
